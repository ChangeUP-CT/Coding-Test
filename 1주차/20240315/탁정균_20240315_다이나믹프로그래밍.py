# 링크: https://www.acmicpc.net/problem/10826
# 10826: 피보나치 수 4
# 알고리즘 분류: 다이나믹 프로그래밍/임의 정밀도/큰 수 연산

# 1. n 입력
# 2. 계산된 결과는 dp 리스트에 저장하고, 반복문에서 함수를 재귀적으로 호출하되 이미 호출되었던 값은 dp 테이블을 참조
# 3. n번째 피보나치 수 출력

# Tip: 리스트 대신 딕셔너리를 이용해 실행 속도를 36ms까지 떨어뜨린 케이스가 있습니다.

n = int(input())

dp = [0] * 10001  # n은 10,000 이하의 자연수 또는 0
dp[1] = 1
dp[2] = 1
for i in range(3, n + 1):
    dp[i] = dp[i - 2] + dp[i - 1]

print(dp[n])
